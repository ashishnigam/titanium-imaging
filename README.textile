**2013-07-10: The module is not in active development &ndash; but as far as I have heard, it works with version 3.3.1 and older of the SDK. Make sure to configure it before building (see below).**

h2. Imaging module for Titanium on iOS

This module adds native image manipulation methods and control of JPEG compression to Titanium.

It provides a subclass of TiBlob, ComSpiirImage, enriched with new methods and properties.

<pre>
var blob = Ti.Filesystem.getFile('file.jpg').read();
var image = imaging.createImageFromBlob(blob);
</pre>

As images are blobs, they can be used anywhere where Titanium expectes blobs.

Below are simple examples of use -- check out example/app.js for more code.

h2. Configuration

To get the module to build, you most likely need to adjust <code>TITANIUM_SDK_VERSION</code> and possibly also <code>TITANIUM_SDK</code> in <code>titanium.xcconfig</code>, to reflect the SDK you are building against.  

h2. Examples 

h3. Compression quality

By default, Titanium compresses JPEG images using 100% quality, which results in huge files. The Imaging module addresses this:

<pre>
var blob = Ti.Filesystem.getFile('large.jpg').read();

var image = imaging.createImageFromBlob(blob);
image.compressionQuality = 0.1;

Titanium.Filesystem.getFile('small.jpg').write(image);
</pre>	

h3. Scaling an image down

The method scaleImage scales an image down, retaining proportions:

<pre>
var image = imaging.createImageFromBlob(blob);
var scaledImage = image.scaleImageDown(600, 400);
</pre>
